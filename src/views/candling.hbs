{{> nav/navigation}}    

<div class="page-content p-5" id="content">
    <h5 class="text-black">Ovoscopia</h5>
	<hr>

    <form action="/upload" method="POST" enctype="multipart/form-data">
        <div class="row mb-2 mt-2">
            <div class="row mb-3">
                <label for="fecha" class="col-sm-2 col-form-label">Fecha de inicio: </label>
                <div class="col-sm-9">
                    <input class="form-control" type="date" name="fecha" id="fecha" value="{{fechaLote}}" readonly>
                </div>
                <div class="col-1">
                    <button id="pred" class="btn btn-turquoise" type="button" onclick="clasificar();">
                    Clasificar
                    </button>
                </div>
            </div>
        </div>
    </form>
    <div class="columnas">
        <div class="resultados">
            <form id="file-upload-form" class="uploader row" action="/uploadImage/{{id_egg}}" method="POST" enctype="multipart/form-data">
                <input id="file-upload" type="file" name="image" accept="image/*" />

                <label for="file-upload" id="file-drag">
                    <img id="file-image" src="#" alt="Preview" class="hidden">
                    <div id="start">
                        <i class="fa fa-download" aria-hidden="true"></i>
                        <div>Seleccione un archivo o arrastre aquí</div>
                        <div id="notimage" class="hidden">Por favor seleccione una imagen</div>
                        <span id="file-upload-btn" class="btn file-btn">Seleccione un archivo</span>
                    </div>
                    <div id="response" class="hidden">
                        <div id="messages"></div>
                    </div>
                </label>
                <input id="status" name="status" style="display: none;" value="">
            </form>
        </div>
        <div id="resultado-etapas" style="margin-bottom: 10px;">		
            <div class="card" style="border-radius: 20px;  margin-bottom: 10px;">
                <div class="card-body">	
                    <div class="row">
                        <div class="col-5 btn-et">
                            <h6 style="color: #e57801;"><b>Etapa Inicial:</b></h6>	
                        </div>		
                        <div class="col-7 btn-f" style="padding-bottom: 15px;">
                            <div class="progress progress-stage">
                                <div id="progInicial" class="progress-bar inicial" role="progressbar" aria-label="Example with label" style="width: 100%; color: black;background: #E9ECEF" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">0%</div>
                            </div>	
                        </div>	
                        <div class="col-5 btn-et">
                            <h6 style="color: #d8486b;"><b>Etapa Media:</b></h6>	
                        </div>		
                        <div class="col-7 btn-f" style="padding-bottom: 15px;">
                            <div class="progress progress-stage">
                                <div id="progMedia" class="progress-bar media" role="progressbar" aria-label="Example with label" style="width: 100%; color: black;background: #E9ECEF" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">0%</div>
                            </div>	
                        </div>	
                        
                        <div class="col-5 btn-et">
                            <h6 style="color: #937cd6"><b>Etapa Final:</b></h6>	
                        </div>		
                        <div class="col-7 btn-f" style="padding-bottom: 15px;">
                            <div class="progress progress-stage">
                                <div id="progFinal" class="progress-bar final" role="progressbar" aria-label="Example with label" style="width: 100%; color: black;background: #E9ECEF" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">0%</div>
                            </div>	
                        </div>	
                        <div class="col-5 btn-et">
                            <h6 style="color: #7090c0"><b>Feto Muerto:</b></h6>	
                        </div>		
                        <div class="col-7 btn-f" style="padding-bottom: 15px;">
                            <div class="progress progress-stage">
                                <div id="progInerte" class="progress-bar inerte" role="progressbar" aria-label="Example with label" style="width: 100%; color: black;background: #E9ECEF" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">0%</div>
                            </div>	
                        </div>
                    </div>						
                </div>
            </div>
            <div class="card" style="border-radius: 20px;">
                <div class="card-body">	
                    <p style="font-size: 16px;" align="center"><strong>Resultados</strong></p>
                    <div id="resultado"></div>			
                </div>
            </div>
        </div>
    </div>
    <div class="columnas" style="visibility: hidden; display: none;">
        <div class="resultados">
            <canvas id="canvas" width="400" height="400" style="max-width: 100%; border-radius: 20px; visibility: hidden; display: none;"></canvas>
            <canvas id="othercanvas" width="150" height="150" style="display: none; visibility: hidden;"></canvas> 
        </div>
    </div>
    <div class="modal-footer">
        <button type="submit" class="btn btn-turquoise" form="file-upload-form">Guardar</button>
        <a class="btn btn btn-dark-blue" href="/lots/{{id_lot}}/view">Cancelar</a>
    </div>
    
</div>

<script type="text/javascript">
    var modelo = null;
    (async () => {
        console.log("Cargando modelo...");
        modelo = await tf.loadLayersModel("../train/carpeta_Inception/tfjs_model/model.json");
        console.log("Modelo cargado...");        
    })();
    
    (function(){
        function filePreview(input){
            if(input.files && input.files[0]){
                var reader = new FileReader();
                reader.onload = (loadEvent) => {
                    var canvas = document.getElementById("canvas");
                    var ctx = canvas.getContext("2d");   
                    var img = new Image();                    
                    img.src = reader.result;  
                    img.onload = function(){        
                        ctx.drawImage(img, 0, 0, 400, 400);        
                    }             
                }
                reader.readAsDataURL(input.files[0])
            }
        }
        $('#file-upload').change(function(){
            filePreview(this);
        });
    })(); 

    var canvas = document.getElementById("canvas");
    var ctx = canvas.getContext("2d");    

    var img1 = new Image();    
    img1.src = "../uploads/imgTest.jpg";

    img1.onload = function(){        
        ctx.drawImage(img1, 0, 0, 400, 400);        
    }

    function calcularDias(){    
        var NowMoment = moment().format('DD/MM/YYYY');
        var Date =  document.getElementById("fecha").value;
        return moment().diff(moment(Date), 'days');
    }

    function descipcionEtapa(claseMayor) {
        if(claseMayor == "Etapa Inicial"){
            return "Esta etapa comprende del día 1 al 7 de incubación.";    
        }
        if(claseMayor == "Etapa Media"){
            return "Esta etapa comprende del día 8 al 14 de incubación.";  
        }
        if(claseMayor == "Etapa Final"){
            return "Esta etapa comprende del día 15 al 18 de incubación.";  
        }
        if(claseMayor == "Feto Muerto"){
            return "Puede pertenecer a cualquier etapa del proceso de incubación. ";
        }                 
    } 

    function descipcionDia(dia) {
        switch(dia) {
            case 1:
                return msg = "El disco germinal se encuentra en etapa bastulación, la cavidad de segmentación en el marco del área pelucida toma la forma de un anillo oscura.";
                break;
            case 2:
                return msg = "Aparece  la primera ranura en el centro del blastomero ya se ve la membrana vitelina.";
                break;
            case 3:
                return msg = "El embrión esta echado sobre su lado izquierdo ya hay circulación sanguínea, el vitelo ya se extiende, el corazón ya late.";
                break;
            case 4:
                return msg = "Se desarrolla la cavidad amniótica, ya se llena con líquido amniótico, aparece la vesícula alantoidea.";
                break;
            case 5:
                return msg = "Aumento sensible del embrión, tiene forma. La cabeza se mueve  más cerca de la cola, se extiende las extremidades, ya se diferéncialos dedos de las extremidades inferiores.";
                break;
            case 6:
                return msg = "La membrana vitelina sigue creciendo rodeando  a más de la mitad de la yema. Fisura entre los dedos primero segundo y tercero de las extremidades superiores.";
                break;
            case 7:
                return msg = "Adelgazamiento del cuello, ya se diferencia bien la cabeza del cuerpo, se forma el pico, el cerebro ya entra en la región cefálica.";
                break;
            case 8:
                return msg = "La membrana vitelina cubre toda la yema, la pigmentación de los ojos ya es visible, ya se puede diferenciar el pico las alas y las piernas. El cuello se estira, el cerebro ya se ubica completamente en su cavidad.";
                break;
            case 9:
                return msg = "Aparece las garras, aparece el brote de los primeros folículos de las plumas, crecimiento de la alantoides, aumenta la vascularización del vitelo.";
                break;
            case 10:
                return msg = "Las fosas nasales están presentes como aberturas estrechas, crecimiento de los parpados, los folículos de las plumas ya cubren la parte inferior de las extremidades, aparece el diente de huevo.";
                break;
            case 11:
                return msg = "La alantoides alcanza  su máxima tamaño. El vitelo ya inicia a disminuir, el embrión ya tiene aspecto del pollo.";
                break;
            case 12:
                return msg = "Las plumas ya rodean el meato auditivo externo y también al párpado.";
                break;
            case 13:
                return msg = "La alantoides se encoge para convertirse en la membrana corioalantoidea, aparecen las escamas de las garras y de las piernas.";
                break;
            case 14:
                return msg = "La pelusa cubre casi todo el cuerpo y crece rápidamente.";
                break;
            case 15:
                return msg = "El pollo y las plumas siguen creciendo, se acelera la reducción de vitelo. Desaparición de clara de huevo.";
                break;
            case 16:
                return msg = "El pollo y las plumas siguen creciendo, se acelera la reducción de vitelo. Desaparición de clara de huevo.";
                break;
            case 17:
                return msg = "El sistema renal del embrión produce uratos. El pico, que está abajo el ala apunta hacia celda del aire. La clara de huevo se reabsorbe totalmente.";
                break;
            case 18:
                return msg = "Se internaliza el vitelo, reduce el líquido amniótico.";
                break;
            default: 
                return msg = "No corresponde al rango de días que dura una incuabación.";
        }     
    }
    function clasificar() {
        var isDate = document.getElementById("fecha").value;
        console.log(isDate);
        var isImage = document.getElementById("file-upload").value;
        if (modelo != null) {
            
                if (isImage != "") {                    
                    //Redimensión del canvas 150x150
                    resample_single(canvas, 150, 150, othercanvas);
                    var ctx2 = othercanvas.getContext("2d");
                    var imgData = ctx2.getImageData(0, 0, 150, 150);
                    var arr = [];
                    var arr150 = [];
                    for (var p = 0, i = 0; p < imgData.data.length; p += 4) {
                        var red = imgData.data[p] / 255;
                        var green = imgData.data[p + 1] / 255;
                        var blue = imgData.data[p + 2] / 255;
                        arr150.push([red, green, blue]);
                        if (arr150.length == 150) {
                            arr.push(arr150);
                            arr150 = [];
                        }
                    }
                    arr = [arr];
                    console.log(arr);
                    var tensor4 = tf.tensor4d(arr);
                    var resultados = modelo.predict(tensor4).dataSync();  
                    console.log(resultados);
                    for(let i = 0; i < resultados.length; i++){
                        progressEtapas(i, resultados[i]);
                    }
                    
                    var mayorIndice = resultados.indexOf(
                        Math.max.apply(null, resultados)
                    );
                    var clases = ["Etapa Final", "Etapa Inicial", "Etapa Media", "Feto Muerto"];
                    var diaIncu = calcularDias();
                    document.getElementById("resultado").innerHTML = `<p style="font-size: 16px;"><strong>Desarrollo embrionario:</strong> ${clases[mayorIndice]}</p>
                                                                    <p align="justify" style="font-size: 16px;"><strong>Descripción:</strong> ${descipcionEtapa(clases[mayorIndice])}</p>
                                                                    <p align="justify" style="font-size: 16px;"><strong>Día de incubación:</strong> ${diaIncu}, ${descipcionDia(diaIncu)}</p>`;
                    //document.getElementById("fecha").value = "";
                    //document.getElementById("file-upload").value = "";
                    if(clases[mayorIndice] == "Etapa Final"){
                        document.getElementById("status").value = 3;
                    }
                    if(clases[mayorIndice] == "Etapa Inicial"){
                        document.getElementById("status").value = 1;
                    }
                    if(clases[mayorIndice] == "Etapa Media"){
                        document.getElementById("status").value = 2;
                    }
                    if(clases[mayorIndice] == "Feto Muerto"){
                        document.getElementById("status").value = 4;
                    }
                    
                }else{
                    toastr.warning("Porfavor, seleccione una imagen", "",{
                        "closeButton": true,
                        "debug": false,
                        "newestOnTop": false,
                        "progressBar": true,
                        "positionClass": "toast-top-right",
                        "preventDuplicates": false,
                        "onclick": null,
                        "showDuration": "300",
                        "hideDuration": "1000",
                        "timeOut": "5000",
                        "extendedTimeOut": "1000",
                        "showEasing": "swing",
                        "hideEasing": "linear",
                        "showMethod": "fadeIn",
                        "hideMethod": "fadeOut"
                    });
                }
            /*else {
                toastr.warning("Porfavor, ingrese una fecha", "",{
                    "closeButton": true,
                    "debug": false,
                    "newestOnTop": false,
                    "progressBar": true,
                    "positionClass": "toast-top-right",
                    "preventDuplicates": false,
                    "onclick": null,
                    "showDuration": "300",
                    "hideDuration": "1000",
                    "timeOut": "5000",
                    "extendedTimeOut": "1000",
                    "showEasing": "swing",
                    "hideEasing": "linear",
                    "showMethod": "fadeIn",
                    "hideMethod": "fadeOut"
                });
            }       */   
        }
    }    

    function resample_single(canvas, width, height, resize_canvas) {
        var width_source = canvas.width;
        var height_source = canvas.height;
        width = Math.round(width);
        height = Math.round(height);

        var ratio_w = width_source / width;
        var ratio_h = height_source / height;
        var ratio_w_half = Math.ceil(ratio_w / 2);
        var ratio_h_half = Math.ceil(ratio_h / 2);

        var ctx = canvas.getContext("2d");
        var ctx2 = resize_canvas.getContext("2d");
        var img = ctx.getImageData(0, 0, width_source, height_source);
        var img2 = ctx2.createImageData(width, height);
        var data = img.data;
        var data2 = img2.data;

        for (var j = 0; j < height; j++) {
            for (var i = 0; i < width; i++) {
                var x2 = (i + j * width) * 4;
                var weight = 0;
                var weights = 0;
                var weights_alpha = 0;
                var gx_r = 0;
                var gx_g = 0;
                var gx_b = 0;
                var gx_a = 0;
                var center_y = (j + 0.5) * ratio_h;
                var yy_start = Math.floor(j * ratio_h);
                var yy_stop = Math.ceil((j + 1) * ratio_h);
                for (var yy = yy_start; yy < yy_stop; yy++) {
                    var dy = Math.abs(center_y - (yy + 0.5)) / ratio_h_half;
                    var center_x = (i + 0.5) * ratio_w;
                    var w0 = dy * dy;
                    var xx_start = Math.floor(i * ratio_w);
                    var xx_stop = Math.ceil((i + 1) * ratio_w);
                    for (var xx = xx_start; xx < xx_stop; xx++) {
                        var dx = Math.abs(center_x - (xx + 0.5)) / ratio_w_half;
                        var w = Math.sqrt(w0 + dx * dx);
                        if (w >= 1) {
                            continue;
                        }
                        weight = 2 * w * w * w - 3 * w * w + 1;
                        var pos_x = 4 * (xx + yy * width_source);
                        gx_a += weight * data[pos_x + 3];
                        weights_alpha += weight;
                        if (data[pos_x + 3] < 255)
                            weight = (weight * data[pos_x + 3]) / 250;
                        gx_r += weight * data[pos_x];
                        gx_g += weight * data[pos_x + 1];
                        gx_b += weight * data[pos_x + 2];
                        weights += weight;
                    }
                }
                data2[x2] = gx_r / weights;
                data2[x2 + 1] = gx_g / weights;
                data2[x2 + 2] = gx_b / weights;
                data2[x2 + 3] = gx_a / weights_alpha;
            }
        }
        ctx2.putImageData(img2, 0, 0);
    }

    // File Upload
function ekUpload(){
    function Init() {

    console.log("Upload Initialised");

    var fileSelect    = document.getElementById('file-upload'),
        fileDrag      = document.getElementById('file-drag'),
        submitButton  = document.getElementById('submit-button');

    fileSelect.addEventListener('change', fileSelectHandler, false);

    // Is XHR2 available?
    var xhr = new XMLHttpRequest();
    if (xhr.upload) {
        // File Drop
        fileDrag.addEventListener('dragover', fileDragHover, false);
        fileDrag.addEventListener('dragleave', fileDragHover, false);
        fileDrag.addEventListener('drop', fileSelectHandler, false);
    }
}

function fileDragHover(e) {
    var fileDrag = document.getElementById('file-drag');

    e.stopPropagation();
    e.preventDefault();

    fileDrag.className = (e.type === 'dragover' ? 'hover' : 'modal-body file-upload');
}

function fileSelectHandler(e) {
// Fetch FileList object
    var files = e.target.files || e.dataTransfer.files;

    // Cancel event and hover styling
    fileDragHover(e);

    // Process all File objects
    for (var i = 0, f; f = files[i]; i++) {
        parseFile(f);
        uploadFile(f);
    }
}

// Output
function output(msg) {
// Response
    var m = document.getElementById('messages');
    m.innerHTML = msg;
}

function parseFile(file) {

    console.log(file.name);
    output(
        '<strong>' + encodeURI(file.name) + '</strong>'
    );

    // var fileType = file.type;
    // console.log(fileType);
    var imageName = file.name;

    var isGood = (/\.(?=gif|jpg|png|jpeg|webp)/gi).test(imageName);
    if (isGood) {
        document.getElementById('start').classList.add("hidden");
        document.getElementById('response').classList.remove("hidden");
        document.getElementById('notimage').classList.add("hidden");
        // Thumbnail Preview
        document.getElementById('file-image').classList.remove("hidden");
        document.getElementById('file-image').src = URL.createObjectURL(file);
    }
    else {
        document.getElementById('file-image').classList.add("hidden");
        document.getElementById('notimage').classList.remove("hidden");
        document.getElementById('start').classList.remove("hidden");
        document.getElementById('response').classList.add("hidden");
        document.getElementById("file-upload-form").reset();
    }
}

function setProgressMaxValue(e) {
    var pBar = document.getElementById('file-progress');

    if (e.lengthComputable) {
        pBar.max = e.total;
    }
}

function updateFileProgress(e) {
    var pBar = document.getElementById('file-progress');

    if (e.lengthComputable) {
        pBar.value = e.loaded;
    }
}

function uploadFile(file) {
    var xhr = new XMLHttpRequest(),
        fileInput = document.getElementById('class-roster-file'),
        pBar = document.getElementById('file-progress'),
        fileSizeLimit = 1024; // In MB
    /*if (xhr.upload) {
        // Check if file is less than x MB
        if (file.size <= fileSizeLimit * 1024 * 1024) {
        // Progress bar
        pBar.style.display = 'inline';
        xhr.upload.addEventListener('loadstart', setProgressMaxValue, false);
        xhr.upload.addEventListener('progress', updateFileProgress, false);

        // File received / failed
        xhr.onreadystatechange = function(e) {
            if (xhr.readyState == 4) {
            // Everything is good!

            // progress.className = (xhr.status == 200 ? "success" : "failure");
            // document.location.reload(true);
            }
        };

        // Start upload
        xhr.open('POST', document.getElementById('file-upload-form').action, true);
        xhr.setRequestHeader('X-File-Name', file.name);
        xhr.setRequestHeader('X-File-Size', file.size);
        xhr.setRequestHeader('Content-Type', 'multipart/form-data');
        xhr.send(file);
        } else {
        output('Please upload a smaller file (< ' + fileSizeLimit + ' MB).');
        }
    }*/
}

// Check for the various File API support.
    if (window.File && window.FileList && window.FileReader) {
        Init();
    } else {
        document.getElementById('file-drag').style.display = 'none';
    }
}
ekUpload();

function progressEtapas(pos, porcentajeEtapa){			
        if(pos == 0){
            
            var progress = ((porcentajeEtapa * 100)/1).toFixed(2);
            console.log(progress);
            if(progress == 0){
                document.getElementById("progFinal").style = "width: 100%; color: black; background: #E9ECEF";
                document.getElementById("progFinal").innerHTML = progress+"%";
            }else{
                if(progress >= 100){
                    document.getElementById("progFinal").style = "width: 100%";
                    document.getElementById("progFinal").innerHTML = "100%";
                }else{
                    document.getElementById("progFinal").style = "width: "+progress+"%";
                    document.getElementById("progFinal").innerHTML = progress+"%";
                }
            }
        }
        if(pos == 1){
            var progress = ((porcentajeEtapa * 100)/1).toFixed(2);
            if(progress == 0){
                document.getElementById("progInicial").style = "width: 100%; color: black; background: #E9ECEF";
                document.getElementById("progInicial").innerHTML = progress+"%";
            }else{
                if(progress >= 100){
                    document.getElementById("progInicial").style = "width: 100%";
                    document.getElementById("progInicial").innerHTML = "100%";
                }else{
                    document.getElementById("progInicial").style = "width: "+progress+"%";
                    document.getElementById("progInicial").innerHTML = progress+"%";
                }
            }
        }
        if(pos == 2){
            var progress = ((porcentajeEtapa * 100)/1).toFixed(2);
            if(progress == 0){
                document.getElementById("progMedia").style = "width: 100%; color: black; background: #E9ECEF";
                document.getElementById("progMedia").innerHTML = progress+"%";
            }else{
                if(progress >= 100){
                    document.getElementById("progMedia").style = "width: 100%";
                    document.getElementById("progMedia").innerHTML = "100%";
                }else{
                    document.getElementById("progMedia").style = "width: "+progress+"%";
                    document.getElementById("progMedia").innerHTML = progress+"%";
                }
            }
        }
        if(pos == 3){
            var progress = ((porcentajeEtapa * 100)/1).toFixed(2);
            if(progress == 0){
                document.getElementById("progInerte").style = "width: 100%; color: black; background: #E9ECEF";
                document.getElementById("progInerte").innerHTML = progress+"%";
            }else{
                if(progress >= 100){
                    document.getElementById("progInerte").style = "width: 100%";
                    document.getElementById("progInerte").innerHTML = "100%";
                }else{
                    document.getElementById("progInerte").style = "width: "+progress+"%";
                    document.getElementById("progInerte").innerHTML = progress+"%";
                }
            }
        }
	}
</script>